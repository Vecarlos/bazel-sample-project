load("@rules_java//java:defs.bzl", "java_binary")
load("@wfa_common_jvm//build:defs.bzl", "test_target")
load("@wfa_rules_kotlin_jvm//kotlin:defs.bzl", "kt_jvm_library")
load("//build/platforms:constraints.bzl", "DISTROLESS_JAVA")
load("//src/main/docker:macros.bzl", "java_image")

package(
    default_testonly = True,  #TODO: delete when InMemoryKeyStore and FakeHybridCipher are not used.
    default_visibility = [
        test_target(":__pkg__"),
        "//src/main/kotlin/org/wfanet/measurement/duchy/testing:__pkg__",
        "//src/test/kotlin/org/wfanet/measurement/integration:__subpackages__",
    ],
)

kt_jvm_library(
    name = "gcs_honest_majority_share_shuffle_mill_job",
    srcs = ["GcsHonestMajorityShareShuffleMillJob.kt"],
    deps = [],
)

# java_binary(
#     name = "GcsHonestMajoriyShareShuffleMillJob",
#     main_class = "org.wfanet.measurement.duchy.deploy.gcloud.job.mill.shareshuffle.GcsHonestMajorityShareShuffleMillJobKt",
#     runtime_deps = [
#         ":gcs_honest_majority_share_shuffle_mill_job",
#         "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/gcloud/logging",
#     ],
# )

# java_image(
#     name = "gcs_honest_majority_share_shuffle_mill_job_image",
#     binary = ":GcsHonestMajoriyShareShuffleMillJob",
#     main_class = "org.wfanet.measurement.duchy.deploy.gcloud.job.mill.shareshuffle.GcsHonestMajorityShareShuffleMillJobKt",
#     target_compatible_with = DISTROLESS_JAVA,
#     visibility = ["//src:docker_image_deployment"],
# )
