load("@wfa_common_jvm//build:defs.bzl", "test_target")
load("@wfa_rules_kotlin_jvm//kotlin:defs.bzl", "kt_jvm_library")

package(
    default_visibility = [
        test_target(":__pkg__"),
        "//src/main/kotlin/org/wfanet/measurement/duchy/deploy:__subpackages__",
        "//src/main/kotlin/org/wfanet/measurement/duchy/testing:__pkg__",
        "//src/main/kotlin/org/wfanet/measurement/integration:__subpackages__",
        "//src/test/kotlin/org/wfanet/measurement/duchy/deploy:__subpackages__",
        "//src/test/kotlin/org/wfanet/measurement/integration:__subpackages__",
    ],
)

kt_jvm_library(
    name = "liquid_legions_v2_mill",
    testonly = True,  #TODO: delete when InMemoryKeyStore and FakeHybridCipher are not used.
    srcs = [
        "LiquidLegionsV2Mill.kt",
    ],
    runtime_deps = ["@wfa_common_jvm//imports/java/io/grpc/netty"],
    deps = [],
)

kt_jvm_library(
    name = "reach_frequency_liquid_legions_v2_mill",
    testonly = True,  #TODO: delete when InMemoryKeyStore and FakeHybridCipher are not used.
    srcs = [
        "ReachFrequencyLiquidLegionsV2Mill.kt",
    ],
    runtime_deps = ["@wfa_common_jvm//imports/java/io/grpc/netty"],
    deps = [],
)

kt_jvm_library(
    name = "reach_only_liquid_legions_v2_mill",
    testonly = True,  #TODO: delete when InMemoryKeyStore and FakeHybridCipher are not used.
    srcs = [
        "ReachOnlyLiquidLegionsV2Mill.kt",
    ],
    runtime_deps = ["@wfa_common_jvm//imports/java/io/grpc/netty"],
    deps = [],
)
