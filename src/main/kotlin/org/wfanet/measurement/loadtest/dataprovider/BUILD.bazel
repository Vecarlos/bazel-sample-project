load("@rules_java//java:defs.bzl", "java_binary")
load("@wfa_rules_kotlin_jvm//kotlin:defs.bzl", "kt_jvm_library")
load("//build/platforms:constraints.bzl", "DISTROLESS_JAVA")
load("//src/main/docker:macros.bzl", "java_image")

package(
    default_testonly = True,
    default_visibility = [
        "//src/main/kotlin/org/wfanet/measurement/integration:__subpackages__",
        "//src/main/kotlin/org/wfanet/measurement/loadtest:__subpackages__",
        "//src/test/kotlin/org/wfanet/measurement/integration:__subpackages__",
        "//src/test/kotlin/org/wfanet/measurement/loadtest:__subpackages__",
    ],
)

kt_jvm_library(
    name = "event_query",
    srcs = ["EventQuery.kt"],
    deps = [],
)

kt_jvm_library(
    name = "in_memory_event_query",
    srcs = ["InMemoryEventQuery.kt"],
    deps = [],
)

kt_jvm_library(
    name = "labeled_event",
    srcs = ["LabeledEvent.kt"],
    deps = [],
)

kt_jvm_library(
    name = "synthetic_data_generation",
    srcs = [
        "SyntheticDataGeneration.kt",
    ],
    deps = [],
)

kt_jvm_library(
    name = "synthetic_generator_event_query",
    srcs = ["SyntheticGeneratorEventQuery.kt"],
    deps = [],
)

kt_jvm_library(
    name = "sketch_generator",
    srcs = ["SketchGenerator.kt"],
    deps = [],
)

kt_jvm_library(
    name = "sketch_encrypter",
    srcs = ["SketchEncrypter.kt"],
    deps = [],
)

kt_jvm_library(
    name = "edp_simulator",
    srcs = ["EdpSimulator.kt"],
    deps = [],
)

kt_jvm_library(
    name = "edp_simulator_flags",
    srcs = ["EdpSimulatorFlags.kt"],
    deps = [
        "//src/main/kotlin/org/wfanet/measurement/eventdataprovider/noiser",
        "//src/main/kotlin/org/wfanet/measurement/eventdataprovider/privacybudgetmanagement:privacy_budget_manager",
        "//src/main/kotlin/org/wfanet/measurement/loadtest:service_flags",
        "@wfa_common_jvm//imports/java/picocli",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/common/grpc",
    ],
)

kt_jvm_library(
    name = "edp_simulator_runner",
    srcs = ["EdpSimulatorRunner.kt"],
    deps = [],
)

kt_jvm_library(
    name = "synthetic_generator_edp_simulator_runner",
    srcs = ["SyntheticGeneratorEdpSimulatorRunner.kt"],
    deps = [],
)

# java_binary(
#     name = "SyntheticGeneratorEdpSimulatorRunner",
#     main_class = "org.wfanet.measurement.loadtest.dataprovider.SyntheticGeneratorEdpSimulatorRunnerKt",
#     runtime_deps = [
#         ":synthetic_generator_edp_simulator_runner",
#         "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/gcloud/logging",
#     ],
# )

# java_image(
#     name = "synthetic_generator_edp_simulator_runner_image",
#     binary = ":SyntheticGeneratorEdpSimulatorRunner",
#     main_class = "org.wfanet.measurement.loadtest.dataprovider.SyntheticGeneratorEdpSimulatorRunnerKt",
#     target_compatible_with = DISTROLESS_JAVA,
#     visibility = ["//src:docker_image_deployment"],
# )

kt_jvm_library(
    name = "vid_to_index_map_generator",
    srcs = ["VidToIndexMapGenerator.kt"],
    deps = [],
)

kt_jvm_library(
    name = "frequency_vector_generator",
    srcs = ["FrequencyVectorGenerator.kt"],
    deps = [],
)

kt_jvm_library(
    name = "population_spec_converter",
    srcs = [
        "PopulationSpecConverter.kt",
    ],
    deps = [],
)
