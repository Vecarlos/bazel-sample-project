name: "Process Security Alerts"
description: "Fetches and processes security alerts (CWE or CVE) and prepares an issue title and body."

inputs:
  alert_input:
    description: "The alert code to process"
    required: true
  gh_token:
    description: "The GITHUB_TOKEN for API calls."
    required: true
  my_pat:
    description: "A personal access token (PAT) for the Dependabot API."
    required: true

outputs:
  issue_title:
    description: "The generated title for the issue."
    value: ${{ steps.process_alerts.outputs.issue_title }}
  issue_body:
    description: "The generated body for the issue."
    value: ${{ steps.process_alerts.outputs.issue_body }}

runs:
  using: "composite"
  steps:
    - id: process_alerts
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github_token }}
        ALERT_INPUT: ${{ inputs.alert_input }}
        MY_PAT: ${{ inputs.my_pat }}
      run: |
        LOWERCASE_INPUT=$(echo "$ALERT_INPUT" | tr '[:upper:]' '[:lower:]')
        UPPERCASE_INPUT=$(echo "$ALERT_INPUT" | tr '[:lower:]' '[:upper:]')

        if [[ "$LOWERCASE_INPUT" == cwe-* ]]; then
          CWE_TAG_TO_FIND="external/cwe/$LOWERCASE_INPUT"

          FILTERED_ALERTS=$(gh api "repos/${{ github.repository }}/code-scanning/alerts?state=open&per_page=1" --paginate \
          | jq --arg cwe_tag "$CWE_TAG_TO_FIND" '[.[] | select(.rule.tags | map(ascii_downcase) | contains([$cwe_tag]))]')
          
          DESCRIPTION=$(echo "$FILTERED_ALERTS" | jq -r '.[0].rule.description')
          ISSUE_TITLE="Fix code scanning alert - $UPPERCASE_INPUT - $DESCRIPTION"
          CWE_NUMBER=$(echo "$LOWERCASE_INPUT" | cut -d'-' -f2)
          ALERT_LINK="[$UPPERCASE_INPUT](https://cwe.mitre.org/data/definitions/${CWE_NUMBER}.html)"
          LOCATION_LIST=$(echo "$FILTERED_ALERTS" | jq -r '.[] | "- [\(.most_recent_instance.location.path):\(.most_recent_instance.location.start_line)](\(.html_url))"')
          ISSUE_BODY=$(printf "%s\n\nTracking issue for:\n\n%s" "$ALERT_LINK" "$LOCATION_LIST")

        elif [[ "$LOWERCASE_INPUT" == cve-* ]]; then
          FILTERED_ALERTS=$(GH_TOKEN="$MY_PAT" gh api "repos/${{ github.repository }}/dependabot/alerts?state=open&per_page=1" --paginate \
          | jq --arg cve_id "$LOWERCASE_INPUT" '[.[] | select((.security_advisory.cve_id | ascii_downcase) == $cve_id)]')

          DESCRIPTION=$(echo "$FILTERED_ALERTS" | jq -r '.[0].security_advisory.summary')
          ISSUE_TITLE="Fix code scanning alert - $UPPERCASE_INPUT - $DESCRIPTION"
          CVE_LINK="[$UPPERCASE_INPUT](https://nvd.nist.gov/vuln/detail/$UPPERCASE_INPUT)"
          LOCATION_LIST=$(echo "$FILTERED_ALERTS" | jq -r '.[] | "- <\(.html_url)>"')
          ISSUE_BODY=$(printf "%s\n\nTracking issue for:\n\n%s" "$CVE_LINK" "$LOCATION_LIST")

        else
          ISSUE_TITLE="Invalid Input Format"
          ISSUE_BODY="Input must start with 'cwe-' or 'cve-'. You provided: $ALERT_INPUT"
        fi

        echo "issue_title<<EOF" >> $GITHUB_OUTPUT
        echo "$ISSUE_TITLE" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

        echo "issue_body<<EOF" >> $GITHUB_OUTPUT
        echo "$ISSUE_BODY" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
